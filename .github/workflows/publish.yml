on:
  workflow_dispatch:
  push:
    branches: main
  schedule:
    - cron: "0 13 * * *"

name: Quarto Publish

env:
  RENV_PATHS_ROOT: ~/.cache/R/renv

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Generate apt-packages.txt
        run: echo "libcurl4-openssl-dev libssl-dev libharfbuzz-dev libfribidi-dev" > apt-packages.txt

      - name: Create tarball of apt directories
        run: |
          sudo tar --exclude='./archives/lock' --exclude='./archives/partial' --exclude='./lists/lock' --exclude='./lists/partial' -czvf apt-cache.tar.gz /var/cache/apt /var/lib/apt/lists

      - name: Cache apt packages tarball
        id: cache-apt
        uses: actions/cache@v3
        with:
          path: apt-cache.tar.gz
          key: ${{ runner.os }}-apt-${{ hashFiles('apt-packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Extract apt packages tarball
        if: steps.cache-apt.outputs.cache-hit == 'true'
        run: |
          sudo tar -xzvf apt-cache.tar.gz -C /

      - name: Install system dependencies
        run: |
          sudo apt-get update
          xargs sudo apt-get install -y < apt-packages.txt

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.4.0"

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render and Publish
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
